import json
import os
from pathlib import Path
from typing import Dict

import httpx

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ–º–ø—Ç
PROMPT_PATH = Path(__file__).parent / "prompts" / "prompt_comparison.txt"
with open(PROMPT_PATH, "r", encoding="utf-8") as f:
    PROMPT_TEMPLATE = f.read()

# URL –ª–æ–∫–∞–ª—å–Ω–æ–π LLM (–Ω–∞–ø—Ä–∏–º–µ—Ä, Ollama –∏–ª–∏ vLLM)
LLM_URL = os.getenv("LLM_URL", "http://localhost:8001/v1/chat/completions")

async def compare_news(news1: str, news2: str) -> Dict:
    """
    –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –¥–≤—É—Ö –Ω–æ–≤–æ—Å—Ç–µ–π —á–µ—Ä–µ–∑ LLM –∏ prompt_comparison.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª–æ–≤–∞—Ä—å —Å –≤—ã–≤–æ–¥–æ–º –º–æ–¥–µ–ª–∏.
    """
    prompt = PROMPT_TEMPLATE.format(
        news1=news1.strip(),
        news2=news2.strip()
    )

    async with httpx.AsyncClient(timeout=60.0) as client:
        response = await client.post(
            LLM_URL,
            headers={"Content-Type": "application/json"},
            json={
                "model": "qwen2.5:7b",
                "messages": [
                    {"role": "system", "content": "–¢—ã —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –∞–Ω–∞–ª–∏–∑—É –Ω–æ–≤–æ—Å—Ç–µ–π."},
                    {"role": "user", "content": prompt}
                ],
                "temperature": 0.2,
                "max_tokens": 500
            }
        )

    data = response.json()
    output = data["choices"][0]["message"]["content"]

    try:
        # –ú–æ–∂–Ω–æ —Å—Ä–∞–∑—É –ø—ã—Ç–∞—Ç—å—Å—è –ø–∞—Ä—Å–∏—Ç—å JSON, –µ—Å–ª–∏ –ø—Ä–æ–º–ø—Ç –∑–∞—Å—Ç–∞–≤–ª—è–µ—Ç LLM –≤—ã–¥–∞–≤–∞—Ç—å JSON
        return json.loads(output)
    except Exception:
        # –ï—Å–ª–∏ –Ω–µ JSON ‚Äî –≤–µ—Ä–Ω–µ–º —Ç–µ–∫—Å—Ç
        return {"result": output}


if __name__ == "__main__":
    import asyncio

    news_a = "–ö–æ–º–ø–∞–Ω–∏—è X –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª–∞ —Å–¥–µ–ª–∫—É –Ω–∞ 5 –º–∏–ª–ª–∏–∞—Ä–¥–æ–≤ —Ä—É–±–ª–µ–π."
    news_b = "–ö–æ–º–ø–∞–Ω–∏—è X –æ–±—ä—è–≤–∏–ª–∞ –æ –∑–∞–∫–ª—é—á–µ–Ω–∏–∏ —Å–æ–≥–ª–∞—à–µ–Ω–∏—è —Å—Ç–æ–∏–º–æ—Å—Ç—å—é 5 –º–ª—Ä–¥."
    result = asyncio.run(compare_news(news_a, news_b))
    print("üìä –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–µ–π:")
    print(result)
